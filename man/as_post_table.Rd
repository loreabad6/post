% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/post_table.R
\name{as_post_table}
\alias{as_post_table}
\alias{as_post_table.sf}
\alias{as_post_table.post_array}
\alias{as_post_table.post_table}
\title{Create a post_table object}
\usage{
as_post_table(
  x,
  group_id = NULL,
  time_column_name = NULL,
  sf_column_name = NULL,
  geometry_summary = summarise_geometry_centroid,
  ...
)

\method{as_post_table}{sf}(
  x,
  group_id = NULL,
  time_column_name = NULL,
  sf_column_name = NULL,
  geometry_summary = summarise_geometry_centroid,
  ...
)

\method{as_post_table}{post_array}(x, ..., drop_empty = TRUE)

\method{as_post_table}{post_table}(x, ...)
}
\arguments{
\item{x}{object to convert to \code{post_table} with \code{POLYGON}/\code{MULTIPOLYGON}
geometries and a date/time column.}

\item{group_id}{See Details.
Defaults to the first column in \code{x}.}

\item{time_column_name}{(character) name of column with the temporal
dimension information. Defaults to the first temporal column in \code{x}.}

\item{sf_column_name}{(character) name of column with changing
geometries. Defaults to active \code{sf_column}.}

\item{geometry_summary}{(function) function to compute the summary
geometry. Alternatively an \code{sfc} object with summary geometries (i.e.,
the result of a \verb{summarise_geometry_*()} function or a custom \code{sfc}).
See summarise_geometry for functions or pass your own
summarise_geometry function.}

\item{...}{additional parameters passed on to \code{geometry_summary} function.}

\item{drop_empty}{(logical) should empty geometries be dropped
during post_table creation? Defaults to TRUE}
}
\value{
an object of class \code{post_table}.
}
\description{
\code{post_table} is a spatio-temporal tabular data structure that
organises polygons that change their shape in space and time.
It extends the \code{cubble_df} classes for vector data cubes to support
changing geometries in the temporal face of the cube.
The \code{post_table} geometry for the spatial face of the cube is
\code{geom_sum}, while the changing geometry provided is passed
to the temporal face of the cube.
}
\examples{
as_post_table(polygons)

if(require(dplyr, quietly = TRUE)) {
  library(sf, quietly = TRUE)
  polygons |>
    mutate(area = st_area(geometry)) |>
    as_post_table(
     geometry_summary = summarise_geometry_union
   )
}

}
\references{
Abad, L., Sudmanns, M., and HÃ¶lbling, D. (2024)
Vector data cubes for features evolving in space and time,
\emph{AGILE GIScience Ser.}, 5, 16,
\url{https://doi.org/10.5194/agile-giss-5-16-2024}
}
